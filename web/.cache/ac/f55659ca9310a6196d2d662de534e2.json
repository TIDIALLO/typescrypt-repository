{"id":"src/Model/Attributes.ts","dependencies":[{"name":"D:\\tutos\\frontweb\\typessscripte\\dev\\web\\tsconfig.json","includedInParent":true,"mtime":1673546116306},{"name":"D:\\tutos\\frontweb\\typessscripte\\dev\\web\\package.json","includedInParent":true,"mtime":1673095156343}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attributes = void 0;\nvar Attributes = /*#__PURE__*/function () {\n  function Attributes(data) {\n    var _this = this;\n    _classCallCheck(this, Attributes);\n    this.data = data;\n    this.get = function (key) {\n      return _this.data[key];\n    };\n  }\n  _createClass(Attributes, [{\n    key: \"set\",\n    value: function set(update) {\n      //Object.assign(this.data, update);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.data;\n    }\n  }]);\n  return Attributes;\n}();\nexports.Attributes = Attributes;"},"sourceMaps":{"js":{"mappings":[{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":13,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":23},"generated":{"line":13,"column":14}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":4},"generated":{"line":14,"column":2}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":14,"column":22}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":14,"column":26}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":14,"column":28}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":15,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":16,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":17,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":17,"column":8}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":17,"column":9}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":28},"generated":{"line":17,"column":13}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":17,"column":16}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":28},"generated":{"line":17,"column":20}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":18,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":18,"column":8}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":18,"column":9}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":18,"column":12}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":18,"column":15}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":30},"generated":{"line":18,"column":25}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":36},"generated":{"line":18,"column":28}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":4,"column":46},"generated":{"line":18,"column":30}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":19,"column":6}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":19,"column":13}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":19,"column":18}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":19,"column":19}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":19,"column":23}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":19,"column":24}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":19,"column":27}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":19,"column":28}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":20,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":6,"column":5},"generated":{"line":20,"column":5}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":35},"generated":{"line":21,"column":2}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":36},"generated":{"line":22,"column":2}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":36},"generated":{"line":23,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":2,"column":36},"generated":{"line":24,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":24,"column":11}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":24,"column":24}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":8,"column":17},"generated":{"line":24,"column":30}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":8,"column":17},"generated":{"line":24,"column":32}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":25,"column":6}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":26,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":10,"column":5},"generated":{"line":27,"column":2}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":10,"column":5},"generated":{"line":28,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":10,"column":5},"generated":{"line":29,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":29,"column":11}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":29,"column":29}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":30,"column":6}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":30,"column":13}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":13,"column":19},"generated":{"line":30,"column":17}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":13,"column":20},"generated":{"line":30,"column":18}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":13,"column":24},"generated":{"line":30,"column":22}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":31,"column":4}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":14,"column":5},"generated":{"line":32,"column":2}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":14,"column":5},"generated":{"line":33,"column":2}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":14,"column":5},"generated":{"line":34,"column":0}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":0}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":7}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":8}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":18}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":21}},{"source":"src/Model/Attributes.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":31}}],"sources":{"src/Model/Attributes.ts":"export class Attributes<T> {\r\n    constructor(private data: T) { }\r\n\r\n    get = <K extends keyof T>(key: K): T[K] => {\r\n        return this.data[key];\r\n    };\r\n\r\n    set(update: T): void {\r\n        //Object.assign(this.data, update);\r\n    }\r\n\r\n    getAll(): T {\r\n        return this.data;\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"06be3f40b6531569e34422d817c65f88","cacheData":{"env":{}}}